//Given an array A of non-negative integers, return an array consisting of all the even elements of A, followed by all the odd elements of A.
//You may return any answer array that satisfies this condition.
// Example 1: Input: [3,1,2,4], Output: [2,4,3,1], The outputs [4,2,3,1], [2,4,1,3], and[4, 2, 1, 3] would also be accepted.

public class Solution
{
    public static int[] SortArrayByParity(int[] A)
    {
        //separate even and odd numbers
        int[] result = new int[A.Length];
        int even = 0;
        int odd = A.Length - 1;
        for (int i = 0; i < A.Length; i++)
        {
            //if even number,
            if (A[i] % 2 == 0)
            {
                result[even] = A[i];
                even++;
            }
            //if odd number
            else
            {
                result[odd] = A[i];
                odd--;
            }
        }
        return result;
        //reorder the nubmer by parity
    }
    public static void Main()
    {
        int[] arr1 = new int[] { 3, 4, 5, 7, 6, 5, 3, 0 };
        int[] arr2 = SortArrayByParity(arr1);
        for (int i = 0; i <= arr2.Length; i++)
        {
            System.Console.WriteLine(arr2[i]);
        }
    }
}
