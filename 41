//Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.
// Example:
//Input: [-2,1,-3,4,-1,2,1,-5,4], Output: 6
//Explanation: [4,-1,2,1] has the largest sum = 6.
using System;
public class Solution
{    public static int maxSubArray(int[] A)
    {
        //initialize a variable max for the maximum sum
        var max = int.MinValue;
        //define a temporary maximum value tempmax;
        var tempMax = 0;
        foreach (var t in A)
        {
            //add the variables together
            tempMax += t;
            //if the tempMax we get is greater than max, max gets the tempMax value;
            if (tempMax > max)
            {
                max = tempMax;
            }
            //if it's smaller than 0, make tempmax 0;
            if (tempMax < 0)
            {
                tempMax = 0;
            }
        }
        //after all the variables, return the max as the maxmim possible
        return max;
    }
    public static void Main()
    {
        int[] A = { -2, -1, -1};
        Console.WriteLine(maxSubArray(A));
    }
}
