//The Hamming distance between two integers is the number of positions at which the corresponding bits are different.
//Given two integers x and y, calculate the Hamming distance.
// Note: 0 â‰¤ x, y< 231. Example: Input: x = 1, y = 4, Output: 2

using System;
public class Solution
{
    public static int HammingDistance(int x, int y)
    {
        //if x,y are within the range
        if ((x >= 0 && x < int.MaxValue) && (y > 0 && y < int.MaxValue))
        {
            int a = Convert.ToInt32(Math.Log(x, 2));
            int b = Convert.ToInt32(Math.Log(y, 2));
            //calculate the distance of hamming distance;
            int Hamming = Math.Abs(a - b);
            return Hamming;
        }
        //when input x, y are out of range;
        else
            return -1;
    }
    public static void Main()
    {
        int x = 1;
        int y = 2132121213;
        Console.WriteLine(HammingDistance(x, y));
    }
}
