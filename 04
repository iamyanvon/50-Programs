/*You're given strings J representing the types of stones that are jewels, and S representing the stones you have.  
Each character in S is a type of stone you have.  You want to know how many of the stones you have are also jewels.
The letters in J are guaranteed distinct, and all characters in J and S are letters. 
Letters are case sensitive, so "a" is considered a different type of stone from "A".
Example 1: Input: J = "aA", S = "aAAbbbb", Output: 3
Example 2: Input: J = "z", S = "ZZ", Output: 0
Note: S and J will consist of letters and have length at most 50. The characters in J are distinct.*/

using System;
public class Solution
{
    public static int NumJewelsInStones(string J, string S)
    {
        //initialize the sum as 0;
        int sum = 0;
        //use nest for loop to compare if a character in string J is also in string S;
        for (int i = 0; i < J.Length; i++)
        {
            for (int j = 0; j < S.Length; j++)
            {
                //if two equal values found, the sum plus 1;
                if (J[i] == S[j])
                {
                    sum++;
                }
            }
        }
        return sum;
    }
    public static void Main()
    {   string str1 = "aA";
        string str2="aAAbbbb";
        //output the result, note that the {0};
        Console.WriteLine("The number of Jewels that you have is: {0}", NumJewelsInStones(str1, str2));
    }
}
