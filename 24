//Given an array A of non-negative integers, return an array consisting of all the even elements of A, followed by all the odd elements of A.
//You may return any answer array that satisfies this condition..
using System;
public class Solution
{
    public static int[] SortArrayByParity(int[] A)
    {
        //initialize an new array, separate even and odd numbers
        int[] result = new int[A.Length];
        //even number index start from the beginning
        int even = 0;
        //odd number index starts from the end
        int odd = A.Length - 1;
        for (int i = 0; i < A.Length; i++)
        {
            if (A[i] % 2 == 0)
            {
                //if even number, give to the eventh element, then even moves to the next
                result[even] = A[i];
                even++;
            }
            //else, give the value to the oddth element, then odd moves to the last/left
            else
            {
                result[odd] = A[i];
                odd--;
            }
        }
        return result;
    }
    public static void Main()
    {
        int[] A = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 };
        Console.WriteLine(SortArrayByParity(A));
    }
}
