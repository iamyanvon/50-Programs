//Write a function to find the longest common prefix string amongst an array of strings.
//If there is no common prefix, return an empty string "".
//Example 1: Input: ["flower","flow","flight"], Output: "fl"
//Example 2: Input: ["dog","racecar","car"], Output: ""
//Explanation: There is no common prefix among the input strings.


using System;
using System.Text;
public class Solution
{
    public static string LongestCommonPrefix(string[] strs)
    {
        //return the empty value, if the string length is 0;
        if (strs.Length == 0) return String.Empty;
        //initialize the StringBuilder for the shortest prefix
        var shortest_prefix = new StringBuilder();
        for (int i = 0; i < strs[0].Length; i++)
        {
            for (int j = 1; j < strs.Length; j++)
            {
                //if the first string is longer than any other strings or the jth digits doesn't match, break
                if (i >= strs[j].Length || strs[j][i] != strs[0][i])
                {
                    return shortest_prefix.ToString();
                }
            }
            //or else, append the ith char to the shortest_prefix
            shortest_prefix.Append(strs[0][i]);
        }

        return shortest_prefix.ToString();
    }
    public static void Main()
    {
        string[] strs = { "acdf", "acdgg", "act", "acetdfgdf" };
        Console.WriteLine(LongestCommonPrefix(strs));
    }
}
