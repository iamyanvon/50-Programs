//Maximum Depth of Binary Tree
//Given a binary tree, find its maximum depth.
//The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.
//Note: A leaf is a node with no children.
//Example:
//Given binary tree[3, 9, 20, null, null, 15, 7],
//    3
//   / \
//  9  20
//    /  \
//   15   7
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) { val = x; }
 * }
 */public class Solution
{
    public int MaxDepth(TreeNode root)
    {
        //if root is null, return depth 0;
        if (root == null)
            return 0;
        //if not null, return the greater value of the left& right branch, using recursion method
        else return Math.Max(this.MaxDepth(root.left), this.MaxDepth(root.right)) + 1;
    }
}
